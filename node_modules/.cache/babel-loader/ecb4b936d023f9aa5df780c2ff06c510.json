{"ast":null,"code":"var _jsxFileName = \"/Users/ariel_feingold/Developer/evrythng/src/components/MigrationReport.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport migrationReportStyle from '../../assets/jss/views/migrationReportStyle.jsx';\nimport Loader from './Loader'; // Rejected migrations report generation for export\n\nfunction convertRejectedInputsToCSV(data) {\n  var firstName = \"\",\n      lastName = \"\",\n      workPhone = \"\",\n      homePhone = \"\",\n      email = \"\",\n      birthday = \"\";\n  var result = 'firstNname,lastName,email,birthday,homePhone,workPhone,errorCode,errorTitle,errorSource\\n';\n  data.forEach(function (user) {\n    var currentUser = user.user;\n    var error = user.error;\n\n    if (currentUser.name) {\n      var nameArray = currentUser.name.split(\" \");\n      firstName = nameArray[0];\n      lastName = nameArray[1];\n    }\n\n    ;\n\n    if (currentUser.phones) {\n      var wPhone = currentUser.phones.find(function (phone) {\n        return phone.type === 'work';\n      });\n      var hPhone = currentUser.phones.find(function (phone) {\n        return phone.type === 'home';\n      });\n      wPhone === undefined ? workPhone = \"\" : workPhone = wPhone.phone;\n      hPhone === undefined ? workPhone = \"\" : homePhone = hPhone.phone;\n    }\n\n    if (currentUser.workPhone) {\n      workPhone = currentUser.workPhone;\n    }\n\n    if (currentUser.homePhone) {\n      homePhone = currentUser.homePhone;\n    }\n\n    if (currentUser.emails) {\n      email = currentUser.emails[0].email;\n    }\n\n    if (currentUser.birthdayAt) {\n      birthday = currentUser.birthdayAt;\n    }\n\n    var string = \"\".concat(firstName, \",\").concat(lastName, \",\").concat(email, \",\").concat(birthday, \",\").concat(homePhone, \",\").concat(workPhone, \",\").concat(error.statusCode, \",\").concat(error.title, \",\").concat(error.source, \"\\n\");\n    result = result.concat(string);\n  });\n  return result;\n}\n\n;\n\nfunction downloadCSV(userArray) {\n  var data, link, csv;\n  csv = convertRejectedInputsToCSV(userArray);\n  if (csv == null) return;\n  var filename = \"rejected-users-export.csv\";\n\n  if (!csv.match(/^data:text\\/csv/i)) {\n    csv = 'data:text/csv;charset=utf-8,' + csv;\n  }\n\n  link = encodeURI(csv);\n  data = encodeURI(csv);\n  link = document.createElement('a');\n  link.setAttribute('href', data);\n  link.setAttribute('download', filename);\n  link.click();\n} //Migration report element\n\n\nvar MigrationReport = function MigrationReport(props) {\n  var classes = props.classes;\n  var report, mStatus;\n\n  if (props.isLoading) {\n    mStatus = React.createElement(Loader, {\n      loaderLength: props.loaderLength,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    });\n  } else if (!props.wasSent && !props.isLoading) {\n    mStatus = React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"No Data to Report\");\n  } else {\n    mStatus = React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Migration Report:\"));\n  }\n\n  if (props.wasSent) {\n    var inputs = props.rejectedInputs.concat(props.notSent);\n    report = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: '#51A009'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, props.successfulMigrations, \"  customers were successfuly migrated.\")), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: '#CE4737'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, props.rejectedInputs ? props.rejectedInputs.length : \"0\", \" customers were rejected\"), \".\"), React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: '#CE4737'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, props.notSent ? props.notSent.length : \"0\", \" customers were not sent due to formating issues\"), \".\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: function onClick() {\n        return downloadCSV(inputs);\n      },\n      type: \"download\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.exportButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Export Report\", React.createElement(CloudDownloadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(Button, {\n      mini: true,\n      color: \"secondary\",\n      className: classes.clearButton,\n      onClick: props.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Clear\")), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, inputs.map(function (input, i) {\n      var primaryText = \"ErrorCode: \".concat(input.error.statusCode, \"  |  Title: \").concat(input.error.title, \" | Source: \").concat(input.error.source ? input.error.source : \"N/A\");\n      var secondaryText = \"Customer Name: \".concat(input.user.name ? input.user.name : \"N/A\", \" |   Customer Email: \").concat(input.user.email ? input.user.email : \"N/A\");\n      return React.createElement(ListItem, {\n        key: i,\n        divider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: primaryText,\n        secondary: secondaryText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    })))));\n  }\n\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.report,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    classes: {\n      title: classes.cardHeader,\n      root: classes.cardHeader\n    },\n    title: \"Migration Report\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, mStatus, report)));\n};\n\nMigrationReport.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(migrationReportStyle)(MigrationReport);","map":{"version":3,"sources":["/Users/ariel_feingold/Developer/evrythng/src/components/MigrationReport.jsx"],"names":["React","PropTypes","withStyles","Grid","Typography","CardHeader","Card","CardContent","Button","List","ListItem","ListItemText","CloudDownloadIcon","migrationReportStyle","Loader","convertRejectedInputsToCSV","data","firstName","lastName","workPhone","homePhone","email","birthday","result","forEach","user","currentUser","error","name","nameArray","split","phones","wPhone","find","phone","type","hPhone","undefined","emails","birthdayAt","string","statusCode","title","source","concat","downloadCSV","userArray","link","csv","filename","match","encodeURI","document","createElement","setAttribute","click","MigrationReport","props","classes","report","mStatus","isLoading","loaderLength","wasSent","content","inputs","rejectedInputs","notSent","color","successfulMigrations","length","exportButton","clearButton","reset","map","input","i","primaryText","secondaryText","cardHeader","root","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload'\n\nimport migrationReportStyle from '../../assets/jss/views/migrationReportStyle.jsx'\n\nimport Loader from './Loader'\n\n// Rejected migrations report generation for export\n  function convertRejectedInputsToCSV(data) {\n    let firstName = \"\", lastName=\"\", workPhone = \"\", homePhone= \"\", email=\"\", birthday=\"\"\n    let result = 'firstNname,lastName,email,birthday,homePhone,workPhone,errorCode,errorTitle,errorSource\\n';\n\n    data.forEach(user => {\n      const currentUser = user.user;\n      const error = user.error\n      if(currentUser.name){\n        const nameArray = currentUser.name.split(\" \")\n        firstName= nameArray[0];\n        lastName= nameArray[1];\n      };\n      if(currentUser.phones) {\n        let wPhone = currentUser.phones.find(phone => {return phone.type === 'work'})\n        let hPhone = currentUser.phones.find(phone => {return phone.type === 'home'})\n        wPhone === undefined ? workPhone = \"\" : workPhone = wPhone.phone;\n        hPhone === undefined ? workPhone = \"\" : homePhone = hPhone.phone;\n      }\n\n      if(currentUser.workPhone) { workPhone = currentUser.workPhone }\n\n      if(currentUser.homePhone) { homePhone = currentUser.homePhone }\n\n      if(currentUser.emails) {\n        email = currentUser.emails[0].email\n      }\n\n      if(currentUser.birthdayAt) { birthday = currentUser.birthdayAt}\n        const string =`${firstName},${lastName},${email},${birthday},${homePhone},${workPhone},${error.statusCode},${error.title},${error.source}\\n`\n\n        result = result.concat(string);\n      })\n      return result;\n  };\n\n  function downloadCSV(userArray) {\n    let data, link, csv\n\n      csv = convertRejectedInputsToCSV(userArray);\n\n      if (csv == null) return;\n\n      const filename = \"rejected-users-export.csv\";\n\n      if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n      }\n      link = encodeURI(csv);\n      data = encodeURI(csv);\n      link = document.createElement('a');\n      link.setAttribute('href', data);\n      link.setAttribute('download', filename);\n      link.click();\n  }\n\n//Migration report element\n  const MigrationReport= (props) => {\n    const { classes } = props\n    let report, mStatus;\n\n\n    if (props.isLoading) {\n      mStatus =\n        <Loader\n          loaderLength={props.loaderLength}\n        />\n    } else if(!props.wasSent && !props.isLoading) {\n      mStatus =\n        <Typography variant=\"h5\" component=\"h2\" className={classes.content}>\n          No Data to Report\n        </Typography>\n    } else {\n      mStatus =\n        <Grid container spacing={24}>\n          <Typography variant=\"h5\" component=\"h2\" className={classes.content}>\n            Migration Report:\n          </Typography>\n        </Grid>\n    }\n\n    if(props.wasSent){\n      const inputs = props.rejectedInputs.concat(props.notSent)\n\n      report =\n        <React.Fragment>\n          <Typography\n            variant=\"h5\"\n            component=\"title\"\n          >\n            <span style={{color: '#51A009'}}>\n              {props.successfulMigrations}  customers were successfuly migrated.\n            </span>\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            component=\"title\"\n          >\n            <span style={{color: '#CE4737'}}>\n              {props.rejectedInputs ? props.rejectedInputs.length : \"0\"} customers were rejected\n            </span>.\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            component=\"title\"\n          >\n            <span style={{color: '#CE4737'}}>\n              {props.notSent ? props.notSent.length : \"0\"} customers were not sent due to formating issues\n            </span>.\n          </Typography>\n          <div>\n            <Grid xs={12}>\n              <Button\n                onClick={() => downloadCSV(inputs)}\n                type=\"download\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.exportButton}\n                >\n                Export Report\n                <CloudDownloadIcon />\n              </Button>\n              <Button\n                mini\n                color=\"secondary\"\n                className={classes.clearButton}\n                onClick={props.reset}\n                >\n                Clear\n              </Button>\n            </Grid>\n            <Grid container justify = \"flex-start\">\n              <List >\n                {inputs.map((input, i) => {\n                  const primaryText = `ErrorCode: ${input.error.statusCode}  |  Title: ${input.error.title} | Source: ${input.error.source ? input.error.source : \"N/A\"}`\n                  const secondaryText = `Customer Name: ${input.user.name ? input.user.name : \"N/A\" } |   Customer Email: ${input.user.email ? input.user.email : \"N/A\" }`\n                  return (\n                    <ListItem key={i} divider>\n                        <ListItemText\n                          primary={primaryText}\n                          secondary={secondaryText}\n                        />\n                  </ListItem>\n                  )\n                })}\n              </List>\n            </Grid>\n          </div>\n        </React.Fragment>\n      }\n\n    return(\n      <Grid item xs={12} sm={7}>\n        <Card className={classes.report}>\n          <CardHeader\n              classes ={{title: classes.cardHeader, root: classes.cardHeader }}\n              title=\"Migration Report\"\n            />\n            <CardContent>\n              {mStatus}\n              {report}\n            </CardContent>\n        </Card>\n      </Grid>\n    )\n};\n\nMigrationReport.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(migrationReportStyle)(MigrationReport);\n"]},"metadata":{},"sourceType":"module"}