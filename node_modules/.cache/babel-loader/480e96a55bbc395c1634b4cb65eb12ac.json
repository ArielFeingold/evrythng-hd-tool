{"ast":null,"code":"import _defineProperty from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ariel_feingold/Developer/evrythng/src/components/SignupForm.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 16\n    },\n    menu: {\n      width: 200\n    }\n  };\n};\n\nvar currencies = [{\n  value: 'USD',\n  label: '$'\n}, {\n  value: 'EUR',\n  label: '€'\n}, {\n  value: 'BTC',\n  label: '฿'\n}, {\n  value: 'JPY',\n  label: '¥'\n}];\n\nvar OutlinedTextFields =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OutlinedTextFields, _React$Component);\n\n  function OutlinedTextFields() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OutlinedTextFields);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OutlinedTextFields)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: 'Cat in the Hat',\n      age: '',\n      multiline: 'Controlled',\n      currency: 'EUR'\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(OutlinedTextFields, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-name\",\n        label: \"Name\",\n        className: classes.textField,\n        value: this.state.name,\n        onChange: this.handleChange('name'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-uncontrolled\",\n        label: \"Uncontrolled\",\n        defaultValue: \"foo\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-required\",\n        label: \"Required\",\n        defaultValue: \"Hello World\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        error: true,\n        id: \"outlined-error\",\n        label: \"Error\",\n        defaultValue: \"Hello World\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        disabled: true,\n        id: \"outlined-disabled\",\n        label: \"Disabled\",\n        defaultValue: \"Hello World\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-email-input\",\n        label: \"Email\",\n        className: classes.textField,\n        type: \"email\",\n        name: \"email\",\n        autoComplete: \"email\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-password-input\",\n        label: \"Password\",\n        className: classes.textField,\n        type: \"password\",\n        autoComplete: \"current-password\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-read-only-input\",\n        label: \"Read Only\",\n        defaultValue: \"Hello World\",\n        className: classes.textField,\n        margin: \"normal\",\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-dense\",\n        label: \"Dense\",\n        className: classNames(classes.textField, classes.dense),\n        margin: \"dense\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-multiline-flexible\",\n        label: \"Multiline\",\n        multiline: true,\n        rowsMax: \"4\",\n        value: this.state.multiline,\n        onChange: this.handleChange('multiline'),\n        className: classes.textField,\n        margin: \"normal\",\n        helperText: \"hello\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-multiline-static\",\n        label: \"Multiline\",\n        multiline: true,\n        rows: \"4\",\n        defaultValue: \"Default Value\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-helperText\",\n        label: \"Helper text\",\n        defaultValue: \"Default Value\",\n        className: classes.textField,\n        helperText: \"Some important text\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-with-placeholder\",\n        label: \"With placeholder\",\n        placeholder: \"Placeholder\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-textarea\",\n        label: \"Multiline Placeholder\",\n        placeholder: \"Placeholder\",\n        multiline: true,\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-number\",\n        label: \"Number\",\n        value: this.state.age,\n        onChange: this.handleChange('age'),\n        type: \"number\",\n        className: classes.textField,\n        InputLabelProps: {\n          shrink: true\n        },\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-search\",\n        label: \"Search field\",\n        type: \"search\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined-select-currency\",\n        select: true,\n        label: \"Select\",\n        className: classes.textField,\n        value: this.state.currency,\n        onChange: this.handleChange('currency'),\n        SelectProps: {\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        helperText: \"Please select your currency\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, currencies.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \" \", option.label, \" \");\n      }), \" \"), \" \", React.createElement(TextField, {\n        id: \"outlined-select-currency-native\",\n        select: true,\n        label: \"Native select\",\n        className: classes.textField,\n        value: this.state.currency,\n        onChange: this.handleChange('currency'),\n        SelectProps: {\n          native: true,\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        helperText: \"Please select your currency\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, currencies.map(function (option) {\n        return React.createElement(\"option\", {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, \" \", option.label, \" \");\n      }), \" \"), \" \", React.createElement(TextField, {\n        id: \"outlined-full-width\",\n        label: \"Label\",\n        style: {\n          margin: 8\n        },\n        placeholder: \"Placeholder\",\n        helperText: \"Full width!\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), \" \", React.createElement(TextField, {\n        id: \"outlined-bare\",\n        className: classes.textField,\n        defaultValue: \"Bare\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OutlinedTextFields;\n}(React.Component);\n\nOutlinedTextFields.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(OutlinedTextFields);","map":{"version":3,"sources":["/Users/ariel_feingold/Developer/evrythng/src/components/SignupForm.jsx"],"names":["React","PropTypes","classNames","withStyles","MenuItem","TextField","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dense","marginTop","menu","width","currencies","value","label","OutlinedTextFields","state","name","age","multiline","currency","handleChange","event","setState","target","classes","props","readOnly","shrink","MenuProps","className","map","option","native","margin","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {\n    withStyles\n} from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n});\n\nconst currencies = [{\n        value: 'USD',\n        label: '$',\n    },\n    {\n        value: 'EUR',\n        label: '€',\n    },\n    {\n        value: 'BTC',\n        label: '฿',\n    },\n    {\n        value: 'JPY',\n        label: '¥',\n    },\n];\n\nclass OutlinedTextFields extends React.Component {\n    state = {\n        name: 'Cat in the Hat',\n        age: '',\n        multiline: 'Controlled',\n        currency: 'EUR',\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        const {\n            classes\n        } = this.props;\n\n        return ( <\n            form className = {\n                classes.container\n            }\n            noValidate autoComplete = \"off\" >\n            <\n            TextField id = \"outlined-name\"\n            label = \"Name\"\n            className = {\n                classes.textField\n            }\n            value = {\n                this.state.name\n            }\n            onChange = {\n                this.handleChange('name')\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-uncontrolled\"\n            label = \"Uncontrolled\"\n            defaultValue = \"foo\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField required id = \"outlined-required\"\n            label = \"Required\"\n            defaultValue = \"Hello World\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField error id = \"outlined-error\"\n            label = \"Error\"\n            defaultValue = \"Hello World\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField disabled id = \"outlined-disabled\"\n            label = \"Disabled\"\n            defaultValue = \"Hello World\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-email-input\"\n            label = \"Email\"\n            className = {\n                classes.textField\n            }\n            type = \"email\"\n            name = \"email\"\n            autoComplete = \"email\"\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-password-input\"\n            label = \"Password\"\n            className = {\n                classes.textField\n            }\n            type = \"password\"\n            autoComplete = \"current-password\"\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-read-only-input\"\n            label = \"Read Only\"\n            defaultValue = \"Hello World\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            InputProps = {\n                {\n                    readOnly: true,\n                }\n            }\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-dense\"\n            label = \"Dense\"\n            className = {\n                classNames(classes.textField, classes.dense)\n            }\n            margin = \"dense\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-multiline-flexible\"\n            label = \"Multiline\"\n            multiline rowsMax = \"4\"\n            value = {\n                this.state.multiline\n            }\n            onChange = {\n                this.handleChange('multiline')\n            }\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            helperText = \"hello\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-multiline-static\"\n            label = \"Multiline\"\n            multiline rows = \"4\"\n            defaultValue = \"Default Value\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-helperText\"\n            label = \"Helper text\"\n            defaultValue = \"Default Value\"\n            className = {\n                classes.textField\n            }\n            helperText = \"Some important text\"\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-with-placeholder\"\n            label = \"With placeholder\"\n            placeholder = \"Placeholder\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-textarea\"\n            label = \"Multiline Placeholder\"\n            placeholder = \"Placeholder\"\n            multiline className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-number\"\n            label = \"Number\"\n            value = {\n                this.state.age\n            }\n            onChange = {\n                this.handleChange('age')\n            }\n            type = \"number\"\n            className = {\n                classes.textField\n            }\n            InputLabelProps = {\n                {\n                    shrink: true,\n                }\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-search\"\n            label = \"Search field\"\n            type = \"search\"\n            className = {\n                classes.textField\n            }\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            TextField id = \"outlined-select-currency\"\n            select label = \"Select\"\n            className = {\n                classes.textField\n            }\n            value = {\n                this.state.currency\n            }\n            onChange = {\n                this.handleChange('currency')\n            }\n            SelectProps = {\n                {\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }\n            }\n            helperText = \"Please select your currency\"\n            margin = \"normal\"\n            variant = \"outlined\" >\n            {\n                currencies.map(option => ( <\n                    MenuItem key = {\n                        option.value\n                    }\n                    value = {\n                        option.value\n                    } > {\n                        option.label\n                    } <\n                    /MenuItem>\n                ))\n            } <\n            /TextField> <\n            TextField id = \"outlined-select-currency-native\"\n            select label = \"Native select\"\n            className = {\n                classes.textField\n            }\n            value = {\n                this.state.currency\n            }\n            onChange = {\n                this.handleChange('currency')\n            }\n            SelectProps = {\n                {\n                    native: true,\n                    MenuProps: {\n                        className: classes.menu,\n                    },\n                }\n            }\n            helperText = \"Please select your currency\"\n            margin = \"normal\"\n            variant = \"outlined\" >\n            {\n                currencies.map(option => ( <\n                    option key = {\n                        option.value\n                    }\n                    value = {\n                        option.value\n                    } > {\n                        option.label\n                    } <\n                    /option>\n                ))\n            } <\n            /TextField> <\n            TextField id = \"outlined-full-width\"\n            label = \"Label\"\n            style = {\n                {\n                    margin: 8\n                }\n            }\n            placeholder = \"Placeholder\"\n            helperText = \"Full width!\"\n            fullWidth margin = \"normal\"\n            variant = \"outlined\"\n            InputLabelProps = {\n                {\n                    shrink: true,\n                }\n            }\n            /> <\n            TextField id = \"outlined-bare\"\n            className = {\n                classes.textField\n            }\n            defaultValue = \"Bare\"\n            margin = \"normal\"\n            variant = \"outlined\" /\n            >\n            <\n            /form>\n        );\n    }\n}\n\nOutlinedTextFields.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OutlinedTextFields);\n"]},"metadata":{},"sourceType":"module"}