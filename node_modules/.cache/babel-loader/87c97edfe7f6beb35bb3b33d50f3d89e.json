{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp, _initialiseProps;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction getRequiredProp(required, useNativeRequiredValidator) {\n  if (!useNativeRequiredValidator) {\n    return false;\n  }\n\n  return required || false;\n}\n\nfunction makeLabel(fieldComp, props) {\n  var label = fieldComp.props.label || '';\n  return props.field.isRequired && !props.useNativeRequiredValidator ? '' + label : label;\n}\n\nfunction makeErrorAndHelperText(props) {\n  var helperText = _lodash2.default.get(props.fieldComp.props, 'helperText');\n\n  var isError = false;\n\n  if (!_lodash2.default.isEmpty(props.field) && props.field.validations.length > 0) {\n    helperText = props.field.validations[0].message;\n    isError = true;\n  }\n\n  return {\n    helperText: helperText,\n    isError: isError\n  };\n}\n\nvar FieldClone = (_temp = _class = function (_React$Component) {\n  _inherits(FieldClone, _React$Component);\n\n  function FieldClone(props) {\n    _classCallCheck(this, FieldClone);\n\n    var _this = _possibleConstructorReturn(this, (FieldClone.__proto__ || Object.getPrototypeOf(FieldClone)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var fieldComp = props.fieldComp;\n\n    if (fieldComp.type.name === undefined) {\n      throw new Error('FieldClone does not support native elements');\n    }\n\n    if (fieldComp.props.name === undefined || fieldComp.props.value === undefined) {\n      throw new Error('FieldClone name and value must be defined');\n    }\n\n    var value = _lodash2.default.isEmpty(props.field) ? fieldComp.props.value : props.field.value;\n\n    var _makeErrorAndHelperTe = makeErrorAndHelperText(props),\n        helperText = _makeErrorAndHelperTe.helperText,\n        isError = _makeErrorAndHelperTe.isError;\n\n    _this.state = {\n      helperText: helperText,\n      isError: isError,\n      value: value\n    };\n\n    if (props.field.value === undefined) {\n      _this.props.onConstruct(fieldComp.props);\n    }\n\n    return _this;\n  }\n\n  _createClass(FieldClone, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          fieldComp = _props.fieldComp,\n          props = _objectWithoutProperties(_props, ['fieldComp']);\n\n      return _react2.default.cloneElement(fieldComp, {\n        value: this.state.value,\n        label: makeLabel(fieldComp, props),\n        error: this.state.isError,\n        helperText: this.state.helperText,\n        onBlur: this.onBlur,\n        onChange: this.onChange,\n        required: getRequiredProp(fieldComp.props.required, this.props.useNativeRequiredValidator)\n      });\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps) {\n      if (!_lodash2.default.isEmpty(nextProps.field)) {\n        var _makeErrorAndHelperTe2 = makeErrorAndHelperText(nextProps),\n            _helperText = _makeErrorAndHelperTe2.helperText,\n            _isError = _makeErrorAndHelperTe2.isError;\n\n        return {\n          helperText: _helperText,\n          isError: _isError,\n          value: nextProps.field.value\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return FieldClone;\n}(_react2.default.Component), _class.defaultProps = {\n  field: {}\n}, _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onBlur = function (event) {\n    var _props2 = _this2.props,\n        isDirty = _props2.field.isDirty,\n        fieldComp = _props2.fieldComp,\n        name = _props2.fieldComp.props.name,\n        validateInputOnBlur = _props2.validateInputOnBlur;\n    var value = event.target.value; // // /* TODO: create function for condition */\n\n    if ((!isDirty || validateInputOnBlur) && !fieldComp.props.select) {\n      _this2.props.onValueChange(name, value, true);\n    }\n\n    if (fieldComp.props.onBlur !== undefined) {\n      fieldComp.props.onBlur(value, {\n        name: name\n      }, event);\n    }\n  };\n\n  this.onChange = function (event) {\n    var _props3 = _this2.props,\n        fieldComp = _props3.fieldComp,\n        name = _props3.fieldComp.props.name,\n        validateInputOnBlur = _props3.validateInputOnBlur;\n    var value = event.target.value;\n\n    if (fieldComp.props.select || validateInputOnBlur) {\n      var _helperText2 = _lodash2.default.get(fieldComp.props, 'helperText');\n\n      _this2.setState({\n        isError: false,\n        helperText: _helperText2,\n        value: value\n      });\n    }\n    /* TODO: create function for condition */\n\n\n    if (!validateInputOnBlur || fieldComp.props.select) {\n      _this2.props.onValueChange(name, value, fieldComp.props.select);\n    }\n\n    if (fieldComp.props.onChange !== undefined) {\n      fieldComp.props.onChange(value, {\n        name: name\n      }, event);\n    }\n  };\n}, _temp);\nexports.default = FieldClone;","map":null,"metadata":{},"sourceType":"script"}