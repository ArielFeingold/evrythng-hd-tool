{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp, _initialiseProps;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _Checkbox = require('@material-ui/core/Checkbox');\n\nvar _Checkbox2 = _interopRequireDefault(_Checkbox);\n\nvar _Switch = require('@material-ui/core/Switch');\n\nvar _Switch2 = _interopRequireDefault(_Switch);\n\nvar _FormControlLabel = require('@material-ui/core/FormControlLabel');\n\nvar _FormControlLabel2 = _interopRequireDefault(_FormControlLabel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar FormControlLabelClone = (_temp = _class = function (_React$Component) {\n  _inherits(FormControlLabelClone, _React$Component);\n\n  function FormControlLabelClone(props) {\n    _classCallCheck(this, FormControlLabelClone);\n\n    var _this = _possibleConstructorReturn(this, (FormControlLabelClone.__proto__ || Object.getPrototypeOf(FormControlLabelClone)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    if (![_Checkbox2.default, _Switch2.default].includes(props.control.type)) {\n      throw new Error('invalid FormControlLabel control component');\n    }\n\n    var checked = props.control.props.checked;\n    var value = props.control.props.value;\n\n    if (props.field.value === undefined) {\n      props.onConstruct(props.control.props);\n    } else {\n      checked = _lodash2.default.get(props.field, 'checked');\n    }\n\n    _this.state = {\n      checked: checked,\n      value: value\n    };\n    return _this;\n  }\n\n  _createClass(FormControlLabelClone, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          control = _props.control,\n          label = _props.label;\n      var onChange = control.props.onChange || control.props.onToggle || this.onToggle;\n      var controlOptions = {\n        checked: this.state.checked,\n        onChange: onChange,\n        value: this.state.value\n      };\n      return _react2.default.createElement(_FormControlLabel2.default, {\n        checked: this.state.checked,\n        control: _react2.default.cloneElement(control, controlOptions),\n        onChange: onChange,\n        label: label,\n        value: this.state.value\n      });\n    }\n  }]);\n\n  return FormControlLabelClone;\n}(_react2.default.Component), _class.defaultProps = {\n  field: {}\n}, _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onToggle = function (event, checked) {\n    checked = _lodash2.default.get(event, 'target.checked') || checked;\n    var value = _this2.props.control.props.value; // eslint-disable-line react/prop-types\n\n    var name = _this2.props.control.props.name; // eslint-disable-line react/prop-types\n\n    value = checked ? value : '';\n\n    _this2.setState({\n      checked: checked,\n      value: value\n    });\n\n    _this2.props.onToggle(name, value, checked);\n  };\n}, _temp);\nexports.default = FormControlLabelClone;","map":null,"metadata":{},"sourceType":"script"}