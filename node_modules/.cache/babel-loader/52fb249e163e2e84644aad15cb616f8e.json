{"ast":null,"code":"import _classCallCheck from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ariel_feingold/Developer/evrythng/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ariel_feingold/Developer/evrythng/src/components/TokenTool.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport tokenToolStyle from '../assets/jss/tokenToolStyle.jsx';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar SimpleModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SimpleModal, _React$Component);\n\n  function SimpleModal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleModal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      token: \"\"\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        token: event.target.value\n      });\n    };\n\n    _this.handleTokenUpload = function (e) {\n      e.preventDefault();\n      var token = _this.state.token;\n\n      _this.props.handleTokenUpload(token);\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleModal, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: !this.props.tokenActive,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card, {\n        tyle: getModalStyle(),\n        className: classes.migrationTool,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        classes: {\n          title: classes.cardHeader,\n          root: classes.cardHeader\n        },\n        title: \"Invalid Token\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Token validation failed, To procced, please enter a valid token below.\"), React.createElement(OutlinedInput, {\n        className: classes.input,\n        value: this.state.token,\n        onChange: this.handleChange,\n        labelWidth: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"raised-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleTokenUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.button,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"send\", React.createElement(CloudUploadIcon, {\n        className: classes.rightIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return SimpleModal;\n}(React.Component);\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(tokenToolStyle)(SimpleModal);","map":{"version":3,"sources":["/Users/ariel_feingold/Developer/evrythng/src/components/TokenTool.jsx"],"names":["React","PropTypes","withStyles","Typography","Modal","Button","OutlinedInput","Grid","CardHeader","Card","CardContent","CloudUploadIcon","tokenToolStyle","rand","Math","round","random","getModalStyle","top","left","transform","SimpleModal","state","open","token","handleOpen","setState","handleChange","event","target","value","handleTokenUpload","e","preventDefault","props","classes","tokenActive","migrationTool","title","cardHeader","root","content","input","button","rightIcon","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport tokenToolStyle from '../assets/jss/tokenToolStyle.jsx'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nclass SimpleModal extends React.Component {\n  state = {\n    open: false,\n    token: \"\"\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleChange = (event) => {\n    this.setState({token: event.target.value});\n  }\n\n  handleTokenUpload = (e) => {\n    e.preventDefault()\n    let token = this.state.token\n    this.props.handleTokenUpload(token)\n  }\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Modal\n          open={!this.props.tokenActive}\n        >\n          <Card tyle={getModalStyle()} className={classes.migrationTool}>\n            <CardHeader\n                classes ={{title: classes.cardHeader, root: classes.cardHeader }}\n                title=\"Invalid Token\"\n              />\n\n              <CardContent>\n                <Typography variant=\"h5\" gutterBottom className={classes.content} >\n                  Token validation failed, To procced, please enter a valid token below.\n                </Typography>\n                <OutlinedInput\n                  className={classes.input}\n                  value={this.state.token}\n                  onChange={this.handleChange}\n                  labelWidth= {0}\n                />\n\n                <Grid container justify = \"center\">\n                  <label htmlFor=\"raised-button-file\">\n                    <form onSubmit={this.handleTokenUpload}>\n                    <Button\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      type=\"submit\"\n                      >\n                        send\n                      <CloudUploadIcon className={classes.rightIcon} />\n                    </Button>\n                  </form>\n                </label>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nSimpleModal.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(tokenToolStyle)(SimpleModal);\n"]},"metadata":{},"sourceType":"module"}